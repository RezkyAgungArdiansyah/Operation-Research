clc;clear;close all;format rational;
nKendala = input("Masukkan banyak persamaan kendala : ");
Z = input("Masukkan persamaan yang mau dioptimalkan : ");nVariabel = length(Z);  % Masukkan dalam bentuk matriks
% make a Header Vector
    header = "x" + string(1:nVariabel);
    header (nVariabel+1 : nVariabel+nKendala) = "s" + string(1:nKendala);
    header (end + 1) = "NK";
% make a Row Vector
	RowNames = "s" + string(1:nKendala);
    RowNames(end + 1) = "Z";
    RowNames = RowNames';
Z = -1.*Z; Z = [Z zeros(1,nKendala+1)];
x = zeros (1,nKendala)';
Kendala = zeros (nKendala,nVariabel+1);
%input from user
for i = 1 : nKendala
    Kendala (i,:) = input("Masukkan fungsi kendala ke - " + i + " : ");
    Tanda(i) = input("Masukkan Tanda : ");
    if Tanda(i) == '>'
    Kendala(i,:) = -1*Kendala(i,:);
    x(i) = 1;
    elseif Tanda == '='
    x(i) = 2;
    end
end

Matriks = [Kendala(:,1:end-1) eye(nKendala) Kendala(:,end)];
for i = 1:nKendala
if x(i) == 1
Matriks(i,:) = -Matriks(i,:);
elseif x(i) == 2
Matriks(i,nVariabel+i) = 0;
end
end
V = zeros(nKendala,1);

M = [Matriks;Z];
M = array2table(M,'VariableNames',header,'RowNames',RowNames);
disp(M);
k = 1;
%iteration start
while (true)
VariabelKunci = input("Masukkan Kolom Kunci : ");
format short;
Rasio = Matriks(1:nKendala,end)./Matriks(1:nKendala,VariabelKunci);
Rasio = Rasio'
format rat;
BarisKunci = input("Masukkan Baris Kunci : ");
RowNames(BarisKunci) = "x" + string(VariabelKunci);
V(BarisKunci) = VariabelKunci;
Matriks(BarisKunci,:) = Matriks(BarisKunci,:)./Matriks(BarisKunci,VariabelKunci);
for j = 1 : nKendala
if j ~= BarisKunci
Matriks(j,:) = Matriks(j,:) - Matriks(BarisKunci,:).*Matriks(j,VariabelKunci);
end
end
disp("ITERASI KE - " + k);
Z = Z - Matriks(BarisKunci,:).*Z(VariabelKunci);
M = [Matriks;Z];
M = array2table(M,'VariableNames',header,'RowNames',RowNames);
disp(M);
x = input("Apakah Mau Melanjutkan Iterasi : ");
k = k+1;
if x == 0
    break;
end
end

% final printing
disp ("Fungsi Bernilai Optimal dengan nilai :" + Z(end));
for k = 1 : nKendala
if V(k) ~=0 && V(k) <= nVariabel
disp ("Variabel ke - " + V(k) + " = " + Matriks(k,end));
end
end
